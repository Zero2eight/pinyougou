<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- 页面不登录也可以访问 -->
	<http pattern="/seller/add.do" security="none"></http>
	
	<!-- 页面拦截规则  use-expressions是否使用SpEL,默认为true-->
	<http use-expressions="false">
		<!-- 拦截范围,角色定义 -->
		<intercept-url pattern="/admin/**" access="ROLE_SELLER" />
		<!-- 登录界面,默认成功界面,失败跳转界面,是否使用默认 -->
		<form-login login-page="/shoplogin.html" default-target-url="/admin/index.html"
			authentication-failure-url="/shoplogin.html" always-use-default-target="true" />
		<!-- 关闭CSRF(Cross-site request forgery)跨站请求伪造,是一种对网站的恶意利用 -->
		<csrf disabled="true" />
		<logout/>
		<headers>
			<frame-options policy="SAMEORIGIN" />
		</headers>
	</http>
	
	<!-- 认证管理器 -->
	<authentication-manager>
		<authentication-provider user-service-ref="userDatailService">
			<password-encoder ref="passwordEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>
	
	<!-- 认证类 -->
	<beans:bean id="userDatailService" class="com.pinyougou.shop.service.UserDetailsServiceImpl">
		<beans:property name="sellerService" ref="sellerService"></beans:property>
	</beans:bean>
	
	<!-- 借用dubbo调用远程服务 -->
	<dubbo:application name="pinyougou-shop-web" />
	<dubbo:registry address="zookeeper://192.168.25.134:2181"/>
	<!-- 将接口配置进来,这样不需要注解的情况下,也可以调用服务层啦 -->
	<dubbo:reference id="sellerService" interface="com.pinyougou.sellergoods.service.SellerService" ></dubbo:reference>
	
	<!-- BCrypt加密登录 -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
</beans:beans>